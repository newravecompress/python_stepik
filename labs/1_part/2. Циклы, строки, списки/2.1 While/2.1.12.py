'''
В Институте биоинформатики между информатиками и биологами устраивается соревнование.
Победителям соревнования достанется большой и вкусный пирог.
В команде биологов aa человек, а в команде информатиков — bb человек.

Нужно заранее разрезать пирог таким образом, чтобы можно было раздать кусочки пирога любой команде,
выигравшей соревнование, при этом каждому участнику этой команды должно достаться одинаковое число кусочков пирога.
И так как не хочется резать пирог на слишком мелкие кусочки, нужно найти минимальное подходящее число.

Напишите программу, которая помогает найти это число.
Программа должна считывать размеры команд (два положительных целых числа aa и bb, каждое число вводится на отдельной строке)
и выводить наименьшее число dd, которое делится на оба этих числа без остатка.
'''

'''
Можно воспользоваться алгоритмом Евклида для нахождения НОДа, а затем с помощью него найти НОК
Алгоритм Евклида:

Большее число делим на меньшее.
Если делится без остатка, то меньшее число и есть НОД (следует выйти из цикла).
Если есть остаток, то большее число заменяем на остаток от деления.
Переходим к пункту 1.
'''

'''
Примечание к коду. В цикле в a или b записывается остаток от деления. 
Когда остатка нет (мы не знаем в а он или b, поэтому проверяем оба условия), то цикл завершается. 
В конце выводится сумма a и b, т.к. мы не знаем, в какой переменной записан НОД, 
а в одной из них в любом случае 0, который на результат суммы никак не влияет.
'''

a = int(input())
b = int(input())

c = a   # Сохраним значения во вспомогательных переменных
d = b

while c != 0 and d != 0:
    if c > d:
        c = c % d
    else:
        d = d % c

gcd = c + d

print(int(a * b / gcd))


# еще вариант
fn = f = int(input())
s = int(input())

while fn % s != 0:
    fn += f

print(fn)
